#!/usr/bin/env bash
# Script para configurar todo el proyecto ContenidosX
# Usage: ./scripts/configurar_todo.sh

set -euo pipefail

echo "üöÄ CONFIGURACI√ìN COMPLETA DE CONTENIDOSX"
echo "========================================"
echo ""

# Colores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Funci√≥n para imprimir con color
print_status() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

print_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

print_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

print_info() {
    echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"
}

# Verificar que flyctl est√° instalado
check_flyctl() {
    if ! command -v flyctl &> /dev/null; then
        print_error "flyctl no est√° instalado"
        echo "Instalando flyctl..."
        curl -L https://fly.io/install.sh | sh
        export PATH="$HOME/.fly/bin:$PATH"
    fi
    print_status "flyctl est√° disponible"
}

# Verificar que estamos autenticados en Fly.io
check_fly_auth() {
    if ! flyctl auth whoami &> /dev/null; then
        print_warning "No est√°s autenticado en Fly.io"
        echo "Iniciando autenticaci√≥n..."
        flyctl auth login
    fi
    print_status "Autenticado en Fly.io"
}

# Verificar estado de las aplicaciones
check_apps_status() {
    echo ""
    echo "üìä VERIFICANDO ESTADO DE APLICACIONES"
    echo "====================================="
    
    # Staging
    if flyctl status --app contenidosx-app-stg &> /dev/null; then
        print_status "Staging app est√° funcionando"
        echo "   URL: https://contenidosx-app-stg.fly.dev"
    else
        print_error "Staging app no est√° funcionando"
    fi
    
    # Producci√≥n
    if flyctl status --app contenidosx-app-prod &> /dev/null; then
        print_status "Producci√≥n app est√° funcionando"
        echo "   URL: https://contenidosx-app-prod.fly.dev"
    else
        print_error "Producci√≥n app no est√° funcionando"
    fi
}

# Verificar secrets configurados
check_secrets() {
    echo ""
    echo "üîë VERIFICANDO SECRETS CONFIGURADOS"
    echo "==================================="
    
    # Staging secrets
    echo "üìã Secrets en STAGING:"
    if flyctl secrets list --app contenidosx-app-stg | grep -q "RESEND_API_KEY"; then
        print_status "RESEND_API_KEY configurado en staging"
    else
        print_warning "RESEND_API_KEY no configurado en staging"
    fi
    
    # Producci√≥n secrets
    echo "üìã Secrets en PRODUCCI√ìN:"
    if flyctl secrets list --app contenidosx-app-prod | grep -q "RESEND_API_KEY"; then
        print_status "RESEND_API_KEY configurado en producci√≥n"
    else
        print_warning "RESEND_API_KEY no configurado en producci√≥n"
    fi
}

# Probar conectividad de las aplicaciones
test_connectivity() {
    echo ""
    echo "üåê PROBANDO CONECTIVIDAD"
    echo "========================"
    
    # Staging
    echo "Probando STAGING..."
    if curl -s -f https://contenidosx-app-stg.fly.dev > /dev/null; then
        print_status "Staging responde correctamente"
    else
        print_error "Staging no responde"
    fi
    
    # Producci√≥n
    echo "Probando PRODUCCI√ìN..."
    if curl -s -f https://contenidosx-app-prod.fly.dev > /dev/null; then
        print_status "Producci√≥n responde correctamente"
    else
        print_error "Producci√≥n no responde"
    fi
}

# Mostrar informaci√≥n de configuraci√≥n
show_config_info() {
    echo ""
    echo "üìã INFORMACI√ìN DE CONFIGURACI√ìN"
    echo "==============================="
    
    echo "üîß URLs de las aplicaciones:"
    echo "   ‚Ä¢ Staging: https://contenidosx-app-stg.fly.dev"
    echo "   ‚Ä¢ Producci√≥n: https://contenidosx-app-prod.fly.dev"
    
    echo ""
    echo "üîë Webhooks de Stripe:"
    echo "   ‚Ä¢ Staging: https://contenidosx-app-stg.fly.dev/api/webhooks/stripe"
    echo "   ‚Ä¢ Producci√≥n: https://contenidosx-app-prod.fly.dev/api/webhooks/stripe"
    
    echo ""
    echo "üîê URLs de autenticaci√≥n:"
    echo "   ‚Ä¢ Staging: https://contenidosx-app-stg.fly.dev/auth"
    echo "   ‚Ä¢ Producci√≥n: https://contenidosx-app-prod.fly.dev/auth"
    
    echo ""
    echo "üìß Configuraci√≥n de email:"
    echo "   ‚Ä¢ Resend API configurado en ambos entornos"
    echo "   ‚Ä¢ Staging: re_tu_api_key_aqui (reemplazar con clave real)"
    echo "   ‚Ä¢ Producci√≥n: re_i3JdqKg6_3Tuc6YuiRXvThy3BiCGbMnsD"
}

# Mostrar pr√≥ximos pasos
show_next_steps() {
    echo ""
    echo "üéØ PR√ìXIMOS PASOS"
    echo "================="
    
    echo "1. üîë Configurar GitHub Secrets:"
    echo "   ‚Ä¢ Ve a tu repositorio en GitHub"
    echo "   ‚Ä¢ Settings ‚Üí Secrets and variables ‚Üí Actions"
    echo "   ‚Ä¢ Agrega los secrets listados en CONFIGURACION_COMPLETA_GUIA.md"
    
    echo ""
    echo "2. üí≥ Configurar webhooks de Stripe:"
    echo "   ‚Ä¢ Ve a https://dashboard.stripe.com/webhooks"
    echo "   ‚Ä¢ Crea webhooks para staging y producci√≥n"
    echo "   ‚Ä¢ Configura los eventos necesarios"
    
    echo ""
    echo "3. üîê Configurar autenticaci√≥n de Supabase:"
    echo "   ‚Ä¢ Ve a https://supabase.com/dashboard/project/hojusdfclfrovxroumff"
    echo "   ‚Ä¢ Authentication ‚Üí Settings"
    echo "   ‚Ä¢ Configura URLs de redirecci√≥n"
    
    echo ""
    echo "4. üß™ Probar funcionalidades:"
    echo "   ‚Ä¢ Registro de usuarios"
    echo "   ‚Ä¢ Login/logout"
    echo "   ‚Ä¢ Creaci√≥n de contenido"
    echo "   ‚Ä¢ Suscripciones de Stripe"
    echo "   ‚Ä¢ Paywall funcionando"
    
    echo ""
    echo "5. üìä Monitorear aplicaciones:"
    echo "   ‚Ä¢ Staging: https://fly.io/apps/contenidosx-app-stg/monitoring"
    echo "   ‚Ä¢ Producci√≥n: https://fly.io/apps/contenidosx-app-prod/monitoring"
}

# Funci√≥n principal
main() {
    echo "Iniciando verificaci√≥n completa del proyecto..."
    echo ""
    
    # Verificaciones b√°sicas
    check_flyctl
    check_fly_auth
    
    # Verificar estado de las aplicaciones
    check_apps_status
    
    # Verificar secrets
    check_secrets
    
    # Probar conectividad
    test_connectivity
    
    # Mostrar informaci√≥n de configuraci√≥n
    show_config_info
    
    # Mostrar pr√≥ximos pasos
    show_next_steps
    
    echo ""
    echo "üéâ VERIFICACI√ìN COMPLETADA"
    echo "=========================="
    echo "Revisa CONFIGURACION_COMPLETA_GUIA.md para m√°s detalles"
}

# Ejecutar funci√≥n principal
main "$@"

